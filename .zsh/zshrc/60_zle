#
# Zle
#

## zkbd helps defining human-friendly keymap names by sourcing a properly named
## file from ~/.zsh/zkbd

## A file is created by calling zkbd if there doesn't exist one for the current
##triple: $TERM-$VENDOR-$OSTYPE

autoload zkbd && [[ ! -f ~/.zsh/zkbd/$TERM-$VENDOR-$OSTYPE ]] && zkbd
[[ -f ~/.zsh/zkbd/$TERM-$VENDOR-$OSTYPE ]] && source ~/.zsh/zkbd/$TERM-$VENDOR-$OSTYPE || source ~/.zsh/zkbd/xterm-$VENDOR-$OSTYPE

## Emacs mode
bindkey -e

## Old style keybindings, now aliases are used via zkbd
# bindkey '\e[1~' beginning-of-line
# bindkey '\e[2~' overwrite-mode
# bindkey '\e[3~' delete-char
# bindkey '\e[4~' end-of-line
# bindkey '\e[5~' history-search-backward
# bindkey '\e[6~' history-search-forward
# case $TERM in (xterm*)
#     bindkey '\e[H'  beginning-of-line
#     bindkey '\e[F'  end-of-line;;
# esa

## Teh bindings.
[[ -n ${key[Home]}      ]]  &&  bindkey "${key[Home]}"      beginning-of-line
[[ -n ${key[Insert]}    ]]  &&  bindkey "${key[Insert]}"    overwrite-mode
[[ -n ${key[Delete]}    ]]  &&  bindkey "${key[Delete]}"    delete-char
[[ -n ${key[End]}       ]]  &&  bindkey "${key[End]}"       end-of-line
[[ -n ${key[PageUp]}    ]]  &&  bindkey "${key[PageUp]}"    history-search-backward
[[ -n ${key[PageDown]}  ]]  &&  bindkey "${key[PageDown]}"  history-search-forward
[[ -n ${key[Up]}        ]]  &&  bindkey "${key[Up]}"        up-line-or-history
[[ -n ${key[Down]}      ]]  &&  bindkey "${key[Down]}"      down-line-or-history
[[ -n ${key[Left]}      ]]  &&  bindkey "${key[Left]}"      backward-char
[[ -n ${key[Right]}     ]]  &&  bindkey "${key[Right]}"     forward-char

## Kill that line
bindkey '^u'    backward-kill-line

## Kill that word
bindkey '^\\' backward-kill-word

## Turn prediction on/off
if autoload predict-on ; then
    zle -N predict-on
    zle -N predict-off
    bindkey '^X^T^N' predict-on
    bindkey '^X^T^F' predict-off
fi

## ctrl-x, f inserts the latest modified file the the command line
bindkey -s '^xf' '*(.om[1])\t'

## exec_on_xclip, by ft
## http://bewatermyfriend.org/posts/2007/05-17.17-57-48-computer.html
if whence xclip &>/dev/null; then
    if autoload exec_on_xclip; then
        zle -N exec_on_xclip
        bindkey '^xb'   exec_on_xclip
        bindkey '^x^b'  exec_on_xclip
        zstyle ':exec_on_xclip:*'             contexts                      \
                                                  "0:uri_http"  'http://*'  \
                                                  "1:file_gz"   '(/|~)*.gz' \
                                                  "2:file"      '(/|~)*'

        zstyle ':exec_on_xclip:*'             stages '0:nox' '1:x11'
        zstyle ':exec_on_xclip:*'             xclip "xclip"
        zstyle ':exec_on_xclip:*'             options "-o"
        zstyle ':exec_on_xclip:*'             pager "less -Mr"
        zstyle ':exec_on_xclip:x11:*'         operate false
        zstyle ':exec_on_xclip:nox:*'         clearterm true
        if   [[ -x $(which opera) ]] ; then
            zstyle ':exec_on_xclip:x11:uri_http'  app 'opera -remote openURL(_eoxc_)'
        elif [[ -x $(which firefox) ]] ; then
            zstyle ':exec_on_xclip:x11:uri_http'  app 'firefox -new-tab _eoxc_'
        else
            zstyle ':exec_on_xclip:x11:uri_http'  app false
        fi
        zstyle ':exec_on_xclip:*:uri_http'    app "${BROWSER:-w3m} _eoxc_"
        zstyle ':exec_on_xclip:*:file_gz'     app "zless _eoxc_"
        zstyle ':exec_on_xclip:*:file'        app "less _eoxc_"

    fi
fi

## expand-or-complete-with-dots
## Ian Langworth, 13.Jun.07 17:53
## <b6c719b90706131353l3c12764eg893b3ff39294dcde@mail.gmail.com>
# autoload expand-or-complete-with-dots
# zle -N expand-or-complete-with-dots
# bindkey "^I" expand-or-complete-with-dots
# Also show what completer is being tried.
zstyle ":completion:*" show-completer true

## Redo
bindkey '^xr' 'redo'
bindkey '^x^r' 'redo'

## Search in history for lines that are exactly the same from the start up to
## the cursor position.
bindkey '^xp' history-beginning-search-backward
bindkey '^xn' history-beginning-search-forward

## vi-${direction}-word
# bindkey '\eB' vi-backward-word
# bindkey '\eF' vi-forward-word

## Better handling of multi-line commands than push-line, especially in the
## buffer stack
bindkey '\eq' push-line-or-edit

## Fine-tuned word manipulation
longword-command() {
    typeset -U WORDCHARS=${WORDCHARS}:@,+
    zle ${WIDGET#longword-}
}
shortword-command() {
    typeset WORDCHARS=${WORDCHARS//[\/.:;-@# ]}
    zle ${WIDGET#shortword-}
}

# kill-word
zle -N longword-kill-word longword-command
zle -N shortword-kill-word shortword-command
bindkey '\ed' shortword-kill-word
bindkey '\eD' longword-kill-word

# backward-kill-word
zle -N longword-backward-kill-word longword-command
zle -N shortword-backward-kill-word shortword-command
bindkey '\ew' shortword-backward-kill-word
bindkey '^w' shortword-backward-kill-word
bindkey '\eW' longword-backward-kill-word

# forward-word
zle -N longword-forward-word    longword-command
zle -N shortword-forward-word    shortword-command
bindkey '\ef' shortword-forward-word
bindkey '\eF' longword-forward-word

# backward-word
zle -N longword-backward-word   longword-command
zle -N shortword-backward-word  shortword-command
bindkey '\eb' shortword-backward-word
bindkey '\eB' longword-backward-word

## Enter directories in menu selection, from zshguide.
bindkey -M menuselect '^o' accept-and-infer-next-history

## Easier to navigate menus
accept-and-execute-line() { zle accept-line ; zle accept-line }
zle -N accept-and-execute-line
# bindkey -M menuselect '^M' accept-and-execute-line

## Completion help
bindkey '^xh' _complete_help

## Manual completion calls
bindkey '^X^R' _read_comp

## delete-word-alnum
delete-word-alnum() { 
    typeset WORDCHARS=
    zle delete-word
}
zle -N delete-word-alnum
# bindkey "\ed" delete-word-alnum

## copy-prev-word
## default is \e^_ (ctrl+alt+shift+-)
bindkey '\e=' copy-prev-word

## zsticky
## Bart Schaefer, <080113000048.ZM15017@torch.brasslantern.com>
autoload -U zsticky

## Fast directory navigation
# http://blog.orebokech.com/2008/03/fast-directory-navigation.html
function up-one-dir { set -E; pushd ..; set +E; zle redisplay; zle -M `pwd` }
function back-one-dir { set -E; popd; set +E; zle redisplay; zle -M `pwd` }
zle -N up-one-dir
zle -N back-one-dir
bindkey "^[-" up-one-dir
bindkey "^[=" back-one-dir

## expand-dot
# http://rusmafia.org/linux/zsh-parent-dir-expand
# it messes up incremental completion
# autoload -U expand-dot
# zle -N expand-dot
# bindkey . expand-dot

## narrow-to-region wrapper
# Mikael Magnusson <mikachu@gmail.com>
# <237967ef0804021119l400b2305sbc9e5391a380e616@mail.gmail.com>

zle -N _narrow_to_region_marked
bindkey "^X^I"    _narrow_to_region_marked
autoload -U narrow-to-region
function _narrow_to_region_marked()
{
  local right
  local left
  if ((MARK == 0)); then
    zle set-mark-command
  fi
  if ((MARK < CURSOR)); then
    left="$LBUFFER[0,$((MARK-CURSOR-1))]"
    right="$RBUFFER"
  else
    left="$LBUFFER"
    right="$BUFFER[$((MARK+1)),-1]"
  fi
  narrow-to-region -p "$left>>|" -P "|<<$right"
}

### some scripts from either of these three (who copied from who?)
# http://wael.nasreddine.com/cgi-bin/viewvc.cgi/wael/trunk/etc/.zsh/zle?revision=628&view=markup&sortby=author
# http://hg.codemac.net/config/
# git://github.com/gigamo/config.git
## bracket_automatcher
bracket_automatcher() {
    zle self-insert
    zle vi-backward-char
    zle vi-match-bracket
    zle -R
    sleep 0.2
    zle vi-match-bracket
    zle forward-char
}
zle -N bracket_automatcher
bindkey ']' bracket_automatcher
bindkey '}' bracket_automatcher
bindkey ')' bracket_automatcher
#
## clear-bottom
clear-screen-bottom () {
    echo -n "\033[2J\033[400H"
    builtin zle .redisplay
}
zle -N clear-screen-bottom
bindkey "^L" clear-screen-bottom

## expand-or-complete-prefix is much cooler
bindkey '^I' expand-or-complete-prefix

## Cycle in reverse with meta-tab
bindkey '\e^I' reverse-menu-complete

## ctrl-o to browse directory hierarchies
bindkey  -M  menuselect  '^o'  accept-and-infer-next-history

## _email_addresses from lbdbq
autoload -U _email-lbdbq

# vim:ft=zsh
